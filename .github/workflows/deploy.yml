name: Deploy UUID Generator to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Test job
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "No package.json found, skipping npm install"
        fi
    
    - name: Run tests
      run: |
        if [ -f package.json ] && npm run test --if-present; then
          echo "Tests completed"
        else
          echo "No tests configured, performing basic validation"
          # Basic HTML validation
          if command -v html5validator &> /dev/null; then
            html5validator --root . --match "*.html"
          fi
          # Check if main files exist
          test -f index.html
          test -f styles.css
          test -f script.js
          echo "Basic validation passed"
        fi
    
    - name: Validate HTML
      run: |
        # Check if HTML files are valid
        for file in *.html; do
          if [ -f "$file" ]; then
            echo "Checking $file"
            # Basic syntax check
            if ! grep -q "<!DOCTYPE" "$file"; then
              echo "Warning: $file missing DOCTYPE declaration"
            fi
            if ! grep -q "</html>" "$file"; then
              echo "Error: $file missing closing html tag"
              exit 1
            fi
          fi
        done
    
    - name: Validate CSS
      run: |
        # Check if CSS files exist and are not empty
        for file in *.css; do
          if [ -f "$file" ]; then
            echo "Checking $file"
            if [ ! -s "$file" ]; then
              echo "Warning: $file is empty"
            fi
          fi
        done
    
    - name: Validate JavaScript
      run: |
        # Check if JS files exist and basic syntax
        for file in *.js; do
          if [ -f "$file" ]; then
            echo "Checking $file"
            if [ ! -s "$file" ]; then
              echo "Warning: $file is empty"
            fi
            # Basic syntax check with Node.js
            node -c "$file" || exit 1
          fi
        done

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "No package.json found, using static files"
        fi
    
    - name: Build project
      run: |
        if [ -f package.json ] && npm run build --if-present; then
          echo "Build completed"
        else
          echo "No build script found, preparing static files"
          mkdir -p _site
          cp -r . _site/
          # Remove unnecessary files from build
          rm -rf _site/.git
          rm -rf _site/.github
          rm -rf _site/node_modules
          rm -f _site/.gitignore
          rm -f _site/package*.json
        fi
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Lighthouse CI job (optional)
  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
    
    - name: Run Lighthouse CI
      run: |
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
      continue-on-error: true